package Presentacion;

import java.awt.Image;
import java.io.FileNotFoundException;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author abrilislas
 */
public class PanelTarjeta extends javax.swing.JPanel {
    
    /**
     * VARIABLES FINALES DE LAS PROPORCIONES DE LOS OBJETOS CONTENIDOS PANEL
     */
    private final int FILAS = 4; // Filas de las tarjetas.
    private final int COLUMNAS = 4; // Columnas de la tarjeta.
    private final int WIDTH_CASILLA = 88; // Ancho de la casilla (px)
    private final int HEIGHT_CASILLA = 126; // Tam. de la casilla (px)
    
    /**
     * ELEMENTOS A UTILIZAR EN EL LAYER 
     */
    private JLabel fondo; //IMAGEN DE LA CARTA (CAPA 02)
    private JButton boton; //BOTON INVISIBLE SOBRE LA CARTA (CAPA 01)
    private JPanel overlay; //SUPERPOSICION VERDE (CAPA 03)

    /**
     * Creates new form PanelTarjeta
     */
    public PanelTarjeta(int[] arregloTarjetaPosicion ) {
        initComponents();
        setSize(370, 522);
        //crearImagenCartas(arregloTarjetaPosicion);
    }
    
    public void crearCasillaLoteria(){}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 522, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     *Este metodo se encarga de cargar las imagenes que contendra la tarjeta con la que se jugara
     * @param arregloTarjetaPosicion
     * @throws FileNotFoundException Al no encontrar el archivo
     */
    private void crearImagenCartas(int[] arregloTarjetaPosicion) throws FileNotFoundException  {
    //Imagen de fondo 
        for (int i : arregloTarjetaPosicion) { //Se genera una imagen por carta
            URL rutaImagenCarta = getClass().getResource("/img/Cartas/"+i+".jpeg"); //se obtiene ruta de la imagen de la carta correspondiente
            if(rutaImagenCarta==null){
                throw new FileNotFoundException("no se encontro la imagen");
                }
            
            ImageIcon imagenOriginal = new ImageIcon(rutaImagenCarta);
            Image escalada = imagenOriginal.getImage().getScaledInstance(WIDTH_CASILLA, HEIGHT_CASILLA, Image.SCALE_SMOOTH);
            ImageIcon cartaEscalada = new ImageIcon(escalada);
        }

    }
    private void crearTablero(){
    
    }
    
    /** idea del gpt
     * private void crearTablero(int[] arregloTarjetaPosicion) {
    JPanel grid = new JPanel(new GridLayout(4, 4, 5, 5));
    grid.setPreferredSize(new Dimension(370, 522));

    int anchoCarta = 88;
    int altoCarta = 126;

    for (int i : arregloTarjetaPosicion) {
        // Ruta de la imagen
        URL ruta = getClass().getResource("/img/Cartas/" + i + ".jpeg");
        if (ruta == null) {
            System.err.println("Imagen no encontrada: " + i);
            continue;
        }

        ImageIcon original = new ImageIcon(ruta);
        Image escalada = original.getImage().getScaledInstance(anchoCarta, altoCarta, Image.SCALE_SMOOTH);
        ImageIcon cartaEscalada = new ImageIcon(escalada);

        // Crear la casilla
        CasillaLoteria casilla = new CasillaLoteria(cartaEscalada, anchoCarta, altoCarta);

        // Simulación: si el número es par, consideramos que es "correcto"
        casilla.setOnClickCorrecto(() -> {
            if (i % 2 == 0) {
                casilla.mostrarOverlay(); // mostrar overlay verde
            } else {
                JOptionPane.showMessageDialog(null, "Carta incorrecta");
            }
        });

        grid.add(casilla);
    }

    this.add(grid); // 'this' es tu JFrame o JPanel principal
    this.pack();    // Ajusta ventana automáticamente
}

     */
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
