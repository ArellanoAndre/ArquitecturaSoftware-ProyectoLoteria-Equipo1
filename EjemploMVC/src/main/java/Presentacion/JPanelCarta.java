package Presentacion;

import ModeloVista.entidadesVista.CartaVista;
import Observer.IModeloVista;
import Observer.Observer;
import java.awt.Image;
import javax.swing.ImageIcon;

/**
 * Panel gráfico que muestra la carta actual del juego. Implementa Observer para
 * recibir notificaciones del ModeloVista cuando cambia la carta cantada.
 */
public class JPanelCarta extends javax.swing.JPanel implements Observer {

    private IModeloVista modeloVista;     // Modelo que provee la carta actual
    private JPantallaJuego pantallaJuego;  // Pantalla principal que contiene este panel

    /**
     * Constructor que inicializa el panel y lo registra como observador del
     * modelo.
     *
     * @param modeloVista ModeloVista del juego.
     * @param pantallaJuego Pantalla principal donde se muestra el juego.
     */
    public JPanelCarta(IModeloVista modeloVista, JPantallaJuego pantallaJuego) {
        initComponents();
        this.modeloVista = modeloVista;
        this.modeloVista.addObserver(this);
        this.pantallaJuego = pantallaJuego;
    }

    /**
     * Método llamado cuando el ModeloVista notifica un cambio. Actualiza la
     * imagen de la carta y el nombre en la pantalla.
     */
    @Override
    public void update() {
        CartaVista carta = modeloVista.getCartaCantada();
        if (carta != null) {
            ImageIcon iconoOriginal = new ImageIcon(getClass().getResource(carta.getRuta()));
            Image imgEscalada = iconoOriginal.getImage().getScaledInstance(
                    getWidth(), getHeight(), Image.SCALE_SMOOTH);

            lblImagen.setIcon(new ImageIcon(imgEscalada));
            lblImagen.setText(""); // quita el texto placeholder
            pantallaJuego.actualizarNombreCarta(carta.getNombreCarta());
        }
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblImagen = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(213, 323));

        jPanel1.setPreferredSize(new java.awt.Dimension(213, 323));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblImagen, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addGap(112, 112, 112))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImagen, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblImagen;
    // End of variables declaration//GEN-END:variables
}
